pipeline {
  
  agent any
  
  tools {
            go 'Go 1.16'
        }

  environment {
      NEXUS_IP="192.168.59.90"
      STAGING_IP="192.168.59.80"
      PRODUCTION_IP="192.168.59.85"
  }

  options {
      timestamps()
  }

  stages{
      stage ('source code download'){
        steps{
            cleanWs()
            git(
                branch: 'master',
                changelog: false,
                poll: false,
                url: 'https://github.com/malec0101/word-cloud-generator.git'
            )
        }
    }
  
      stage ('source code checking'){
        steps{
	    sh '''
	       make lint
	       make test
	    '''
        }
    }
    
      stage ('Build code'){
        steps{
            sh '''
                echo "{ \\"version\\": \\"1.$BUILD_NUMBER\\" }" >static/version

                GOOS=linux GOARCH=amd64 go build -o ./artifacts/word-cloud-generator -v .

                md5sum artifacts/word-cloud-generator
                gzip artifacts/word-cloud-generator

                ls -l artifacts/
            '''
            nexusArtifactUploader  (
                artifacts: [
                    [
                        artifactId: 'word-cloud-generator', 
                        classifier: '', 
                        file: 'artifacts/word-cloud-generator.gz', 
                        type: 'gz'
                    ]
                ], 
                credentialsId: 'nexus-creds', 
                groupId: '1', 
                nexusUrl: "$NEXUS_IP:8081/", 
                nexusVersion: 'nexus3', 
                protocol: 'http', 
                repository: 'word-cloud-app', 
                version: '$BUILD_NUMBER'
            )
        }
    }

    stage('Deploy to Staging & integration-tests') {
        stages {
            stage('Deploy to Staging') {
	        steps {
                   withCredentials([usernamePassword(credentialsId: 'nexus-creds', passwordVariable: 'NEXUS_DOWNLOAD_PASSWORD', usernameVariable: 'NEXUS_DOWNLOAD_USER')]) {
                sh '''
                    SSHPASS='vagrant' sshpass -e ssh -o StrictHostKeyChecking=no vagrant@$STAGING_IP \
		    "sudo systemctl stop wordcloud; \
                    curl -X GET -u $NEXUS_DOWNLOAD_USER:$NEXUS_DOWNLOAD_PASSWORD \
		    http://$NEXUS_IP:8081/repository/word-cloud-app/1/word-cloud-generator/${BUILD_NUMBER}/word-cloud-generator-${BUILD_NUMBER}.gz \
		    -o /opt/word-cloud-generator.gz; \
                    gunzip -f /opt/word-cloud-generator.gz; \
                    chmod +x /opt/word-cloud-generator; \
                    sudo systemctl start wordcloud"
                '''
            }
	  }  
        }
            stage('Parallel integration-tests') {
	        parallel {
		    stage('tests#1') {
		        steps{
			    sh '''
			       res=`curl -s -H "Content-Type: application/json" \
			       -d '{"text":"ths is a really really really important thing this is"}' \
			       http://$STAGING_IP:8888/version | jq '. | length'`
                               if [ "1" != "$res" ]; then
                                 exit 99
                               fi\

                               res=`curl -s -H "Content-Type: application/json" \
			       -d '{"text":"ths is a really really really important thing this is"}' \
			       http://$STAGING_IP:8888/api | jq '. | length'`
                               if [ "7" != "$res" ]; then
                                 exit 99
                               fi\
			    '''
			}
		    }
		    stage('tests#2') {
		        steps{
			    sh '''
			       res=`curl -s -H "Content-Type: application/json" \
			       -d '{"text":"ths is a really really really important thing this is"}' \
			       http://$STAGING_IP:8888/version | jq '. | length'`
                               if [ "1" != "$res" ]; then
                                 exit 99
                               fi\

                               res=`curl -s -H "Content-Type: application/json" \
			       -d '{"text":"ths is a really really really important thing this is"}' \
			       http://$STAGING_IP:8888/api | jq '. | length'`
                               if [ "7" != "$res" ]; then
                                 exit 99
                               fi\
			    '''
			}
		    }    
		}
	    }
	}
    }	
    stage('Deploy to Production') {
	steps {
            withCredentials([usernamePassword(credentialsId: 'nexus-creds', passwordVariable: 'NEXUS_DOWNLOAD_PASSWORD', usernameVariable: 'NEXUS_DOWNLOAD_USER')]) {
                sh '''
                    SSHPASS='vagrant' sshpass -e ssh -o StrictHostKeyChecking=no vagrant@$PRODUCTION_IP \
		    "sudo systemctl stop wordcloud; \
                    curl -X GET -u $NEXUS_DOWNLOAD_USER:$NEXUS_DOWNLOAD_PASSWORD \
		    http://$NEXUS_IP:8081/repository/word-cloud-app/1/word-cloud-generator/${BUILD_NUMBER}/word-cloud-generator-${BUILD_NUMBER}.gz \
		    -o /opt/word-cloud-generator.gz; \
                    gunzip -f /opt/word-cloud-generator.gz; \
                    chmod +x /opt/word-cloud-generator; \
                    sudo systemctl start wordcloud"
                '''
            }
	  }  
        }
      }	
    }
